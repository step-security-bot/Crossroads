{"version":3,"file":"component---src-templates-documentation-js-content-file-path-content-documentation-hero-mdx-9507ed9e523358e8fc38.js","mappings":"uIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,aAAa,KAACC,GAAQN,EAErD,OADKM,GAUP,SAA8BC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAZaG,CAAqB,QAAQ,GACjCC,EAAAA,cAAoBL,EAAM,CAC/BM,MAAO,iBACND,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,qQAC9C,CAKA,IAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOS,EAAYH,EAAAA,cAAoBG,EAAWf,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,C,0HCVA,MAAMgB,EAAwBC,IAA6C,IAA5C,SAACC,EAAQ,KAAEC,EAAI,YAAEC,EAAW,SAAEC,GAASJ,EACpE,MAAMK,EAAOH,EAAKI,OAAOC,MACnBC,EAAMN,EAAKO,IAAIC,gBAAgBC,MAC/BC,EAAYT,EAAYU,YAAYjB,MAC1C,OAAOD,EAAAA,cAAoBmB,EAAAA,EAAQ,CACjCZ,KAAMA,EACNE,SAAUA,GACTT,EAAAA,cAAoBoB,EAAAA,EAAK,CAC1BnB,MAAOgB,EACPI,YAAab,EAAYa,cACvBrB,EAAAA,cAAoB,UAAW,CACjCsB,UAAW,wCACVtB,EAAAA,cAAoB,MAAO,CAC5BsB,UAAW,yBACVtB,EAAAA,cAAoB,KAAM,KAAM,iBAAkBA,EAAAA,cAAoB,KAAM,KAAMU,EAAKa,KAAI,CAACC,EAAMC,KACnG,MAAMC,EAAUjB,EAASkB,SAASC,SAASJ,EAAKK,OAAOC,MACjD7B,EAAQuB,EAAKN,YAAYjB,MAC/B,OAAOD,EAAAA,cAAoB,KAAM,CAC/B+B,IAAKN,EACLH,UAAWI,EAAU,UAAY,IAChC1B,EAAAA,cAAoBgC,EAAAA,KAAM,CAC3BC,GAAIT,EAAKK,OAAOC,MACf7B,GAAQyB,GAAW1B,EAAAA,cAAoB,MAAO,CAC/CsB,UAAW,iCACVtB,EAAAA,cAAoB,KAAM,KAAMa,GAAOA,EAAIU,KAAI,CAACW,EAAMC,IAAMnC,EAAAA,cAAoB,KAAM,CACvF+B,IAAM,QAAOI,KACZnC,EAAAA,cAAoBgC,EAAAA,KAAM,CAC3BC,GAAIC,EAAKE,KACRF,EAAKjC,YAAW,MACfD,EAAAA,cAAoB,MAAO,CAC/BsB,UAAW,yBACVtB,EAAAA,cAAoB,SAAU,KAAMA,EAAAA,cAAoB,KAAM,KAAMiB,IAAaX,IAAW,EAGlF,SAAS+B,EAAiBjD,GACvC,OAAOY,EAAAA,cAAoBI,EAAuBhB,EAAOY,EAAAA,cAAoBsC,EAAAA,EAAqBlD,GACpG,C","sources":["webpack://ms-gh-pages/./content/documentation-hero.mdx","webpack://ms-gh-pages/./src/templates/documentation.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {Hero} = _components;\n  if (!Hero) _missingMdxReference(\"Hero\", true);\n  return React.createElement(Hero, {\n    title: \"Documentation\"\n  }, React.createElement(_components.p, null, \"Open source is more than just code. There is planning before code is written,\\nthe process on how to contribute or release that code, and fostering an\\ninclusive environment and community. Please review the guidelines below to\\nlearn how to best contribute.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/Crossroads/Crossroads/site/content/documentation-hero.mdx\";\nimport React from 'react';\nimport {Link, graphql} from 'gatsby';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nconst DocumentationTemplate = ({children, data, pageContext, location}) => {\n  const docs = data.allMdx.nodes;\n  const toc = data.mdx.tableOfContents.items;\n  const pageTitle = pageContext.frontmatter.title;\n  return React.createElement(Layout, {\n    data: data,\n    location: location\n  }, React.createElement(Seo, {\n    title: pageTitle,\n    description: pageContext.description\n  }), React.createElement(\"article\", {\n    className: \"page-main content documentation-main\"\n  }, React.createElement(\"nav\", {\n    className: \"nav documentation-nav\"\n  }, React.createElement(\"h4\", null, \"Documentation\"), React.createElement(\"ul\", null, docs.map((node, i) => {\n    const current = location.pathname.includes(node.fields.slug);\n    const title = node.frontmatter.title;\n    return React.createElement(\"li\", {\n      key: i,\n      className: current ? 'current' : ''\n    }, React.createElement(Link, {\n      to: node.fields.slug\n    }, title), current && React.createElement(\"nav\", {\n      className: \"nav documentation-content-nav\"\n    }, React.createElement(\"ul\", null, toc && toc.map((item, j) => React.createElement(\"li\", {\n      key: `link-${j}`\n    }, React.createElement(Link, {\n      to: item.url\n    }, item.title))))));\n  }))), React.createElement(\"div\", {\n    className: \"documentation-content\"\n  }, React.createElement(\"header\", null, React.createElement(\"h2\", null, pageTitle)), children)));\n};\nDocumentationTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocumentationTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n      tableOfContents\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"/documentation//\" } } }\n      sort: [{ frontmatter: { order: ASC } }]\n    ) {\n      nodes {\n        id\n        excerpt\n        frontmatter {\n          title\n        }\n        internal {\n          contentFilePath\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","Hero","id","component","Error","_missingMdxReference","React","title","wrapper","MDXLayout","DocumentationTemplate","_ref","children","data","pageContext","location","docs","allMdx","nodes","toc","mdx","tableOfContents","items","pageTitle","frontmatter","Layout","Seo","description","className","map","node","i","current","pathname","includes","fields","slug","key","Link","to","item","j","url","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}